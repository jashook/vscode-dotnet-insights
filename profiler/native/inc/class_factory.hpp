////////////////////////////////////////////////////////////////////////////////
// Module: class_factor.hpp
//
////////////////////////////////////////////////////////////////////////////////

#ifndef __CLASS_FACTORY_HPP__
#define __CLASS_FACTORY_HPP__

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#include "unknwn.h"

#include "ev31_profiler.hpp"
#include "globals.hpp"

#include <atomic>

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

namespace ev31 {

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

class class_factory : public IClassFactory
{
    // Ctor / Dtor
    public:
        class_factory();
        virtual ~class_factory();

    // Member methods
    public:
        ::ULONG   STDMETHODCALLTYPE AddRef(void) override;
        ::HRESULT STDMETHODCALLTYPE CreateInstance(IUnknown *pUnkOuter, REFIID riid, void **ppvObject) override;
        ::HRESULT STDMETHODCALLTYPE LockServer(::BOOL fLock) override;
        ::HRESULT STDMETHODCALLTYPE QueryInterface(REFIID riid, void** ppvObject) override;
        ::ULONG   STDMETHODCALLTYPE Release(void) override;

    // Member variables
    private:
        std::atomic<int> ref_count;
}; // class_factory

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

} // namespace (ev31)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#endif // __CLASS_FACTORY_HPP__

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////