////////////////////////////////////////////////////////////////////////////////
// Module: http_response.hpp
////////////////////////////////////////////////////////////////////////////////

#ifndef __HTTP_RESPONSE_HPP__
#define __HTTP_RESPONSE_HPP__

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////

#include <cassert>
#include <ctime>

#include <chrono>
#include <iomanip>
#include <string>
#include <sstream>

#include "http_request.hpp"

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

namespace ev31 {

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

enum http_response_type
{
    Ok,
    Created,
    MovedPermanently,
    BadRequest,
    Unauthorized,
    Forbidden,
    NotFound,
    LengthRequired,
    TooManyRequests,
    InternalServerError,
    ServiceUnavailable,
    HttpVersionNotSupported
};

enum http_content_type
{
    text,
    html,
    json
};

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

class http_response
{
    private:
        ev31::http_request<char, std::string::iterator> request;
        std::stringstream response_header_builder;
        std::string response;
        http_response_type response_type;
        http::version version;

    public:
        http_response(const std::string& response);
        http_response(const ev31::http_request<char, std::string::iterator>& request,
                      ev31::http::version version, 
                      ev31::http_response_type response_type, 
                      const std::string& content,
                      ev31::http_content_type content_type);

        std::string to_string();

    private:
        void add_to_header(const std::string& content, std::string end = " ");
        void add_line_to_header(const std::string& content);
        void stamp_connection();
        void stamp_content_length(const std::string& content);
        void stamp_content_type(http_content_type content_type);
        void stamp_date();
        void stamp_last_modified();
        void stamp_server();
        void stamp_status_code();
        void stamp_version();
};


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

} // end namespace(ev31)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#endif // __HTTP_RESPONSE_HPP__

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
