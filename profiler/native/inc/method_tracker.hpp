////////////////////////////////////////////////////////////////////////////////
// Module: method_tracker.hpp
//
////////////////////////////////////////////////////////////////////////////////

#ifndef __METHOD_TRACKER_HPP__
#define __METHOD_TRACKER_HPP__

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#include <cassert>
#include <chrono>
#include <string>
#include <unordered_map>

#include "method_info.hpp"

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

namespace ev31 {

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

class method_tracker
{
    // Ctor / Dtor
    public:
        method_tracker();
        ~method_tracker();

    // Member Methods
    public:
        const ev31::method_info* get_method_info_for_name(const std::wstring&);
        void start_method_compilation_timing(const std::size_t, const std::wstring&);
        void start_method_execution_timing(const std::size_t, const std::wstring&);
        std::size_t stop_method_compilation_timing(const std::size_t, const std::wstring&);
        std::size_t stop_method_execution_timing(const std::size_t, const std::wstring&);

    private:
        std::unordered_map<std::wstring, ev31::method_info*> method_map;
        std::unordered_map<std::wstring, std::unordered_map<std::size_t, std::chrono::steady_clock::time_point>*> method_compilation_timing_map;
        std::unordered_map<std::wstring, std::unordered_map<std::size_t, std::chrono::steady_clock::time_point>*> method_execution_timing_map;
};

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

} // end of namespace (ev31)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#endif // __METHOD_TRACKER_HPP__

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////